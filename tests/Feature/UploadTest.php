<?php

namespace Tests\Feature;

use App\Models\Post;
use App\Models\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Illuminate\Http\UploadedFile;
use Tests\TestCase;

class UploadTest extends TestCase
{

    use RefreshDatabase, WithFaker;

    private $user;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->user = User::factory()->create();
        $this->actingAs($this->user);
    }

    public function testFileUploading()
    {
        $image = UploadedFile::fake()->image('image.png');
        $response = $this->post(route('uploadFile'), ['profile_img' => $image]);
        $img_path = $this->user->user_image;
        preg_match('/\/(img)\/(profiles)\//', $img_path, $matches);

        $response->assertRedirect('/home');
        $this->assertEquals('/img/profiles/', $matches[0]);
    }

    public function testFileUploadingToPost()
    {
        $image = UploadedFile::fake()->image('image.jpg');
        $post = [
            'title' => 'Title',
            'post_description' => 'Post description',
            'category_id' => 1,
            'post_img' => $image,
        ];
        $response = $this->post(route('posts.store'), $post);
        $img_path = $this->user->posts->first()->post_image;
        preg_match('/\/(img)\/(postImg)\//', $img_path, $matches);

        $response->assertRedirect('/home');
        $response->assertSessionHasNoErrors();
        $response->assertSessionHas('post_success');
        $this->assertEquals('/img/postImg/', $matches[0]);
    }

    public function testInvalidUpload(){
        $response = $this->post(route('uploadFile'), ['profile_img' => null]);
        $img_path = $this->user->user_image;

        $response->assertRedirect('/home');
        $this->assertEquals('', $img_path);
    }
}
