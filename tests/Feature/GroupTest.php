<?php

namespace Tests\Feature;

use App\Models\Group;
use App\Models\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Tests\TestCase;

class GroupTest extends TestCase
{
    use RefreshDatabase, WithFaker;

    private $user;
    private $groupData;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->user = User::factory()->create(['role_id' => 2]);
        $this->actingAs($this->user);
        $this->groupData = [
            'title' => 'Title',
            'group_description' => 'Group description',
            'category_id' => 1
        ];
    }

    public function testAllGroupsRightPage(){
        $response = $this->get('groups');
        $response->assertOk();
        $response->assertViewHas('isAll', true);
        $response->assertViewIs('group.groups');
    }

    public function testUserGroups(){
        $response = $this->get("groups/{$this->user->id}");

        $response->assertOk();
        $this->assertCount(0, $this->user->groups);
        $response->assertViewHas('isAll', false);
    }

    public function testValidDataGroup(){
        $response = $this->post('groups', $this->groupData);

        $response->assertValid();
    }

    public function testInvalidDataGroup(){
        $response = $this->post('groups', ['group_description' => 'description']);

        $response->assertInvalid();
    }

    public function testDeleteGroup(){
        $this->get('/home');
        $response = $this->get('groups');
        $response->assertViewHas('isAdmin', true);

        $this->post(route('groups.store'), $this->groupData);
        $group = Group::all()->last();
        $count = count(Group::all());

        $this->delete(route('groups.destroy', $group->id));
        $this->assertDeleted('groups', $this->groupData);
        $this->assertCount($count-1, Group::all());
    }
}
