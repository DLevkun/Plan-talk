<?php

namespace Tests\Feature;

use App\Models\Post;
use App\Models\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Illuminate\Support\Facades\Cache;
use Illuminate\Support\Facades\DB;
use Tests\TestCase;

class PostTest extends TestCase
{

    use RefreshDatabase, WithFaker;

    private $user;
    private $post_data;
    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->user = User::factory()->create();
        $this->actingAs($this->user);
        $this->post_data = [
            'title' => 'title',
            'post_description' => 'Post description',
            'user_id' => $this->user->id,
            'category_id' => 1
        ];
    }

    public function testIsPostDataValid(){

        $response = $this->post('posts', [
            'title' => 'Post title',
            'post_description' => 'Post description'
        ]);

        $response->assertValid();
    }

    public function testIsPostDataInvalid(){

        $response = $this->post('posts', [
            'post_description' => 'Post description'
        ]);

        $response->assertInvalid();
    }

    public function testIsPostAdded(){

        $this->post('posts', $this->post_data);

        $this->assertCount(1, $this->user->posts->all());
    }

    public function testPostEditing(){
        $this->post('posts', $this->post_data);

        $postId = $this->user->posts->first()->id;

        $response = $this->get("posts/{$postId}/edit");
        $response->assertOk();
    }

    public function testPostUpdateValidation(){
        $this->get('/home');
        $this->post('posts', $this->post_data);

        $postId = $this->user->posts->first()->id;

        $response = $this->patch(route('posts.update', $postId), $this->post_data);
        $response->assertValid();
        $response->assertRedirect('/home?page=1');
    }

    //не работає count(
    public function testPostDestroy(){
        $this->get('/home');
        $this->post('posts', $this->post_data);

        $postId = $this->user->posts->first()->id;

        $response = $this->delete(route('posts.destroy', $postId));
        $response->assertRedirect('/home?page=1');
        $this->assertDeleted('posts', $this->post_data);
        //$this->assertCount(0, $this->user->posts->all());
    }

    public function testShowCategoryPosts(){
        $response = $this->get(route('categoryPosts', 1));

        $response->assertOk();
        $response->assertViewHas('title', 'Category №1');
    }
}
