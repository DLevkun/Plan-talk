<?php

namespace Tests\Feature;

use App\Models\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Illuminate\Support\Facades\DB;
use Tests\TestCase;

class FollowingTest extends TestCase
{
    use RefreshDatabase, WithFaker;

    private $authUser;
    private $user;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->authUser = User::factory()->create(['role_id' => 2]);
        $this->actingAs($this->authUser);
        $this->user = User::factory()->create([
            'full_name' => 'Roma Romaniv',
            'email' => 'roma.romaniv2013@gmail.com',
            'id' => 123,
            'role_id' => 1
        ]);
    }

    //coooouuunt doesn't work(((
    public function testFollow(){
        $this->get(route('friends.show', $this->user->id));
        $response = $this->patch(route('friends.follow', $this->user->id));
        $response->assertRedirect('friends/123');
        //$this->assertCount(1, $this->user->users->all());
    }

    public function testUnfollow(){
        $this->get(route('friends.show', $this->user->id));
        $this->patch(route('friends.follow', $this->user->id));
        $response = $this->delete(route('friends.destroy', $this->user->id));

        $response->assertRedirect('friends/123');
        $this->assertDeleted('friends_users', ['user_id' => $this->authUser->id, 'friend_id' => $this->user->id]);
    }

    public function testFollowSearch(){
        $response = $this->patch(route('followSearch', $this->user->id));
        $response->assertRedirect('friends');
        //$this->assertCount(1, $this->user->users->all());
    }

    public function testUnfollowSearch(){
        $response = $this->delete(route('destroySearch', $this->user->id));

        $response->assertRedirect('friends');
        $this->assertDeleted('friends_users', ['user_id' => $this->authUser->id, 'friend_id' => $this->user->id]);
    }
}
